#+TITLE: Amazon Sagemakerの感想
#+description: 1週間くらい調査してみた感想
#+date: 2023-05-08
#+categories: AWS MLOps

* Introduction

[[https://aws.amazon.com/jp/sagemaker/][Sagemaker]]とはAWSのクラウドサービスの1つで機械学習の機能を多数備えている. 今回仕事の都合でSagemakerの調査を行ったのでその感想を書く. Sagemeker自体は良く考えられた微妙なサービスだという感想を持った. 悪いサービスではなく良く考えられたサービスで感心したのだがそのコンセプトがわかりづらく利用者にも刺さりづらそうであったので勝手な視点で紹介してみる. どんなサービスであるかの説明と個人, チームとしての利用者の視点で解説する. 
 

* Sagemekerの勝手な概要説明

AWSあるあるだが[[https://docs.aws.amazon.com/sagemaker/latest/dg/whatis.html][Sagemekerの概要]]はintorodictionに載せたリンクよりdevelopper guideの方が良い +それでもわかりづらい+. AWSはクラウドサービスを提供しているのでSagemekerもその例に漏れずクラウドサービスであり, 一言で言えばフルマネージド機械学習開発向けクラウドサービスとでも言うべきものだ. クラウドサービスの特徴はやはり自分のコンピュータ以外のリソースを利用できるという点にありSagemekerもそのコンセプトでできている.

** jupyter

僕はSagemakerはjupyterを中心に機能提供するサービスであるという印象を持っていたがこれはひどい誤解であった. その機能のひとつとしてクラウド上にjupyterを立ち上げて利用することができるが全体からみるとこの機能はおまけみたいなものだ. 例えばjupyterの例ではスペックの良いマシンを利用して試行錯誤したい場合に高価なマシンを自前で用意するより時間あたりで借りる方が合理的である. notebookは共通で後ろのインスタンス(マシン)をその都度変更するという機能も備えているので自前でEC2インスタンスを立ち上げてjupyterを利用する場合より便利に利用できる. 
jupyterを利用している場合, 個人でもチームでもマシンのスペックや台数を柔軟に変更したい場合はこのサービスは便利だろう.

** 学習

jupyter機能は機械学習のモデル開発者や開発チームにとっては便利だが学習の際に微妙な点がある. notebookは立ち上げ時間で料金がかかるのでちょっと学習して試行錯誤する分には便利だが長時間の学習では学習が終了した場合にはモデルをどこかに保存してjupyterを停止したい. こんな場合にはモデルの保存処理を書いたり, 学習が終了したら通知したり等いろんな工夫でなんとかできるが工夫が必要な時点でやはりどこかおかしいし面倒だ.
学習では学習時間だけクラウドを利用してモデルの管理もクラウドで面倒を見てくれた方が楽でSagemakerにはその機能がある. [[https://docs.aws.amazon.com/sagemaker/latest/dg/gs-console.html][チュートリアル]]はsagemakerのnotebookを利用しつつ学習はsagemaker上で更に別建てのインスタンスで学習しているので非常にわかりづらいがnotebookでは学習は行っていない. この際にはpythonのsagemakerライブラリを利用しているのでnotebook上で素直に学習する場合と勝手が違うのはそのためだ.


** デプロイ

仕事で機械学習のモデル開発を行っている場合最終的にはユーザーにそのモデルを利用してもらう必要がある. もちろんその提供方法には無限のやり方がある. 個人レベルではnotebookやコードをgithub公開するというやり方でも良いかもしれないがチームやプロジェクトで最終的にサービスとして提供する場合はモデルをどこかのコンピュータ上に載せて利用可能なサービスとして公開すると言う形になるだろう. 例えばREST APIとしてサービスを提供する場合, 物によるが, 機械学習は軽量なサービスにならない場合がほとんどなのでインフラのスケールなども考慮する必要があり自前で行うにはハードルが高い.
SageMakerはこの辺りも考えられていて推論エンドポイントを公開する機能がある.


** MLOps

この辺りの事情が今回僕がSagemakerを調査した理由でもある. 僕は博死して以来機械学習エンジニア→データサイエンティスト→MLOpsエンジニア(現在)という変遷で仕事をしているが所謂モデル開発者の時には僕自身にサービスをREST APIとして公開する能力はなかったし自分の経験した範囲ではモデル開発者でクラウド上にサービスを公開までできる人はいなかった. 今はモデルの開発をせずサービスの提供業務を仕事としているがやはりこれらは別の専門領域でありプロジェクトの体制としても人やチームが専門別に別れがちである. 事実現在のプロジェクトではデータサイエンティストとエンジニアのチームが会社レベルで別れている.
組織が別れていると所謂コンウェイの法則に関連する組織間のコミュニケーションのマネジメントやエンジアリングの課題に直面する. 現職のケースでは僕が参加した当時はデータサイエンティストが機械学習モデルを開発しコードをgitlabに, モデルをS3に置く. そしてその後エンジニアがREST APIに整形して公開するという体制であった. この場合データサイエンティストのモデル開発期間に加えて開発したモデルの変更に追随するREST APIの変更を行う必要があり開発期間が伸びるという課題があった. モデルが変更されるとドキュメントやテスト, インフラ, 仕様など様々な理由でデータサイエンティストとエンジニア間でコミュニケーションが発生する.
このコミュニケーションを楽にするという目的のための候補がSagemakerというわけである. Sagemakerは[[https://docs.aws.amazon.com/ja_jp/sagemaker/latest/dg/sagemaker-projects-why.html][MLOps]]や[[https://docs.aws.amazon.com/ja_jp/sagemaker/latest/dg/sagemaker-projects-whatis.html][プロジェクト]]で説明にされるように機械学習サービスのMLOpsの哲学がクラウドサービスという形で提供されているのだ. この視点でSagemakerを見てみるとAWSがMLOpsを良く考えた上で機械学習クラウドサービスを提供しているのが伝わるのだが, 恐らくこの目玉であるこの哲学がなかなかわかりづらいのが微妙な所だ. データサイエンティストからみると(少なくとも僕の当初の理解では)サイエンス上の魅力的な機能はほとんど無いのも微妙に見えてしまう. この意味でsagemakerは良く考えられた微妙なサービスというわけである.

* Sagemakerが便利そうなケース

最後にどういう場合にsagemakerが便利そうかを個人的な視点で書いてみようと思う.

*** 個人利用

一時的にパワーのいるマシンを使いたい場合はとても便利だろう. 個人で機械学習サービスを作りたい場合もAPIを作る部分まではSagemakerに乗っかると楽だと思う. 
   
*** チーム利用

1. 組織に十分な資金が無い場合開発環境としてSagemakerは良い選択かもしれない. 
2. 現在開発体制にMLOps的課題がある場合Sagemakerが提案するMLOpsに従ってみるのは良い試みだと思う. 



